{"name": "Create converter policy and verify the performance log -- @1.1 ", "status": "broken", "statusDetails": {"message": "AttributeError: 'DataBaseConfig' object has no attribute 'query_data'\n", "trace": "  File \"E:\\Tasks\\YieldWerx_AWS_Repo\\ywtestauto\\venv\\lib\\site-packages\\behave\\model.py\", line 1329, in run\n    match.run(runner.context)\n  File \"E:\\Tasks\\YieldWerx_AWS_Repo\\ywtestauto\\venv\\lib\\site-packages\\behave\\matchers.py\", line 98, in run\n    self.func(context, *args, **kwargs)\n  File \"features\\steps\\data_base_step.py\", line 23, in get_work_flow_step\n    database_yw.get_work_flow_instance(context)\n  File \"E:\\Tasks\\YieldWerx_AWS_Repo\\ywtestauto\\pages\\database.py\", line 76, in get_work_flow_instance\n    policy_ids = database.get_policy_ids(context, Constants.new_policy_name)\n  File \"E:\\Tasks\\YieldWerx_AWS_Repo\\ywtestauto\\Utilities\\database.py\", line 144, in get_policy_ids\n    return get_all_id(context, \"policy\", \"name\",\n  File \"E:\\Tasks\\YieldWerx_AWS_Repo\\ywtestauto\\Utilities\\database.py\", line 26, in get_all_id\n    return database_config.run_query_to_get_ids(context, Constants.query_for_all_id_column, table_name, table_column_condition,\n  File \"E:\\Tasks\\YieldWerx_AWS_Repo\\ywtestauto\\Helpers\\db_config.py\", line 171, in run_query_to_get_ids\n    query = self.query_data[query]\n"}, "steps": [{"name": "Given I delete files from AWS S3 bucket", "status": "passed", "start": 1655652422289, "stop": 1655652431980}, {"name": "Given I upload the Converter files from Input_Golden_file_Path into yw-rawfile-1 AWS S3 bucket", "status": "passed", "start": 1655652431980, "stop": 1655652453010}, {"name": "Then I connect to test database", "status": "passed", "start": 1655652453010, "stop": 1655652453025}, {"name": "Then I delete the data from source_file_location collection", "status": "passed", "start": 1655652453027, "stop": 1655652453077}, {"name": "Then I write the data into source_file_location collection", "status": "passed", "start": 1655652453079, "stop": 1655652453109}, {"name": "Given I upload the Expected_Golden_file files from Expected_Golden_file_Path into yw-golden-1 AWS S3 bucket", "status": "passed", "start": 1655652453110, "stop": 1655652503247}, {"name": "Then I delete the data from target_file_location collection", "status": "passed", "start": 1655652503249, "stop": 1655652503279}, {"name": "Then I write the data into target_file_location collection", "status": "passed", "start": 1655652503280, "stop": 1655652503309}, {"name": "When I login to application using Login api with Payload", "status": "passed", "start": 1655652503309, "stop": 1655652504565}, {"name": "Then I verify the response status code 200 for Login", "status": "passed", "attachments": [{"name": "Starting time after getting response status : 200", "source": "9fe66941-8db8-43cb-888e-c290dff71862-attachment.txt", "type": "text/plain"}, {"name": "Expected Status code 200 is equal to 200", "source": "4269f0f9-c329-408e-be68-3973566ac47e-attachment.txt", "type": "text/plain"}], "start": 1655652504565, "stop": 1655652504579}, {"name": "Then I update the Payload for Converter with ModifiedConverterPolicyName and yw-rawfile-1 bucket", "status": "passed", "attachments": [{"name": "Modify policy name", "source": "04ed95e1-8d2a-421d-ba96-91fe5a5814b8-attachment.txt", "type": "text/plain"}, {"name": "Future date time for policy", "source": "715de27f-6eee-4dba-8313-59e562c7d75f-attachment.txt", "type": "text/plain"}, {"name": "Update The Payload Policy", "source": "a748213d-61a5-4bd5-8535-9694fd0a64ab-attachment.txt", "type": "text/plain"}], "start": 1655652504580, "stop": 1655652504632}, {"name": "Then I create policy for Converter stage and add Payload", "status": "passed", "start": 1655652504633, "stop": 1655652505883}, {"name": "Then I verify the response status code 200 for Converter", "status": "passed", "attachments": [{"name": "Starting time after getting response status : 200", "source": "756cee30-d563-4c4d-9f08-3493b3a3ed39-attachment.txt", "type": "text/plain"}, {"name": "Expected Status code 200 is equal to 200", "source": "8788ea87-af6a-4dbe-ab5e-87b31820119d-attachment.txt", "type": "text/plain"}], "start": 1655652505884, "stop": 1655652505897}, {"name": "Then I connect to YW database", "status": "passed", "start": 1655652505897, "stop": 1655652508799}, {"name": "Then I verify policy data is created in yield-werx-db", "status": "broken", "statusDetails": {"message": "AttributeError: 'DataBaseConfig' object has no attribute 'query_data'\n", "trace": "  File \"E:\\Tasks\\YieldWerx_AWS_Repo\\ywtestauto\\venv\\lib\\site-packages\\behave\\model.py\", line 1329, in run\n    match.run(runner.context)\n  File \"E:\\Tasks\\YieldWerx_AWS_Repo\\ywtestauto\\venv\\lib\\site-packages\\behave\\matchers.py\", line 98, in run\n    self.func(context, *args, **kwargs)\n  File \"features\\steps\\data_base_step.py\", line 23, in get_work_flow_step\n    database_yw.get_work_flow_instance(context)\n  File \"E:\\Tasks\\YieldWerx_AWS_Repo\\ywtestauto\\pages\\database.py\", line 76, in get_work_flow_instance\n    policy_ids = database.get_policy_ids(context, Constants.new_policy_name)\n  File \"E:\\Tasks\\YieldWerx_AWS_Repo\\ywtestauto\\Utilities\\database.py\", line 144, in get_policy_ids\n    return get_all_id(context, \"policy\", \"name\",\n  File \"E:\\Tasks\\YieldWerx_AWS_Repo\\ywtestauto\\Utilities\\database.py\", line 26, in get_all_id\n    return database_config.run_query_to_get_ids(context, Constants.query_for_all_id_column, table_name, table_column_condition,\n  File \"E:\\Tasks\\YieldWerx_AWS_Repo\\ywtestauto\\Helpers\\db_config.py\", line 171, in run_query_to_get_ids\n    query = self.query_data[query]\n"}, "start": 1655652508799, "stop": 1655652508806}, {"name": "Then I verify the SUCCESS status of policy in database from source_file_location", "status": "skipped", "start": 1655652509288, "stop": 1655652509288}, {"name": "Then I get the data workflow_target_file_location , workflow_start_date and workflow_end_date from source_file_location with YieldWerxDataBase for Converter policy validation of Calculated Performance log with Expected_Execution_Time", "status": "skipped", "start": 1655652509288, "stop": 1655652509288}], "attachments": [{"name": "Error in get policy step table id's against ModifiedConverterPolicyNameforperformanceVerification 2022-06-19 20:28:24.581249", "source": "aa8a414a-9fe4-49f4-b5be-7189f3034cc8-attachment.txt", "type": "text/plain"}, {"name": "Error in cleaning the data base after creating converter policy", "source": "1a4fb12a-3dbe-4ca9-852a-0d2342042a61-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "policyName", "value": "Converter"}, {"name": "newPolicyName", "value": "ModifiedConverterPolicyName"}, {"name": "login", "value": "Login"}, {"name": "expectedGoldenFile", "value": "Expected_Golden_file"}, {"name": "expectedStatusCode", "value": "200"}, {"name": "inputGoldenFilePath", "value": "Input_Golden_file_Path"}, {"name": "expectedGoldenFilePath", "value": "Expected_Golden_file_Path"}, {"name": "inputGoldenFileBucketName", "value": "yw-rawfile-1"}, {"name": "expectedGoldenFileBucketName", "value": "yw-golden-1"}, {"name": "payload", "value": "Payload"}, {"name": "inputGoldenFileCollectionName", "value": "source_file_location"}, {"name": "expectedGoldenFileCollectionName", "value": "target_file_location"}, {"name": "targetFileTable", "value": "workflow_target_file_location"}, {"name": "startingDateTable", "value": "workflow_start_date"}, {"name": "endDateTable", "value": "workflow_end_date"}, {"name": "expectedStatus", "value": "SUCCESS"}, {"name": "querySource", "value": "YieldWerxDataBase"}, {"name": "expectedPerformanceLog", "value": "Expected_Execution_Time"}], "start": 1655652422289, "stop": 1655652509288, "uuid": "9657be94-8a01-4937-9f50-99e41c02c3bc", "historyId": "d70f06abe50a7cd61445c5eb4a568af2", "fullName": "Performance log verification: Create converter policy and verify the performance log", "labels": [{"name": "severity", "value": "normal"}, {"name": "tag", "value": "converter"}, {"name": "tag", "value": "converter_performance_verification"}, {"name": "tag", "value": "performance_verification"}, {"name": "feature", "value": "Performance log verification"}, {"name": "framework", "value": "behave"}, {"name": "language", "value": "cpython3"}]}